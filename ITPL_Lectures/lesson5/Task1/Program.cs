/* определение факториала с использованием рекурсии
*/

int Fact(int n)
{
   
    if (n == 1 || n == 0)
    {
        Console.WriteLine($"Stop recurs: {n}");
        return 1;
    }
    Console.WriteLine(n);
    n = n * Fact(n-1);
    Console.WriteLine(n);
    return n;    
}
Console.WriteLine(Fact(5));

/* при запуске отладчика:
F11 шаг с заходом (если на пути функция то входит в функцию)
F10 шаг с обходом (если на пути функция то без захода в функцию)
F5 продолжить (до следующей красной точки)
*/

/* обычно факториал определяют с помощью цикла
здесь цмкл без проверки правильности заданного числа,
для отрицательных чисел будет всегда 1 */
int Fact2(int n)
{
    int result = 1;
    for (int i = 2; i <= n; i++)
    {
        result = result * i;
    }
    return result;
}
Console.WriteLine(Fact2(5));

/* 
Рекурсия - описание объекта (или процесса) внутри самого объекта,
то есть ситауция когда объект является частью самого себя.

в программировании
Рекурсия - процесс в котором функция вызывает саму себя.

Основные компоненты рекурсии в программировании:
1. Основная работа
2. Рекурсивный вызов (предназначен для решения более простой задачи)
3. Базовый случай (для остановки рекурсивных вызовов)

После достижения базового случая начинается процесс
раскручивания рекурсии последовательность возвратов
к местам вызовов функции (обратный ход)

При рекурсивных вызовах в памяти сохраняются
результаты работы функции и они помещеются в стэк
стэк может переполниться, когда в нём не будет места
обычно это происходит если нет условия остановки рекурсии.
При раскручивании рекурсии информация берётся из стэка
в обратном порядке.

Рекурсия наиболее часто применяется
в деревьях, сортировках, при обходе каталогов 

*/
